version: "3.7"

services:
  backend:
    container_name: backend
    build:
      context: ./app_backend
      dockerfile: Dockerfile
    depends_on:
      - db
    volumes:
      - backend:/app/backend
      - ./config/backend/.env:/app/backend/.env
    networks:
      - app-network

  frontend:
    container_name: frontend
    build:
      context: ./app_frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_MODE=production
        - REACT_APP_API=http://app.production:8480/api
    volumes:
      - frontend:/app/frontend
    networks:
      - app-network

  db:
    container_name: db
    image: mysql:5.7
    restart: unless-stopped
    ports:
      - "3305:3306"
    tty: true
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: production
      MYSQL_USER: production
      MYSQL_PASSWORD: production123
    volumes:
      - ./db_prod:/var/lib/mysql
    networks:
      - app-network

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin
    restart: unless-stopped
    ports:
      - "8081:80"
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: production
      PMA_PASSWORD: production123
    networks:
      - app-network
    depends_on:
      - db

  webserver:
    container_name: webserver
    image: webdevops/php-nginx:8.2-alpine
    restart: unless-stopped
    tty: true
    ports:
      - "81:81"
    volumes:
      - frontend:/app/frontend
      - backend:/app/backend
      - ./config/nginx/nginx.prod.conf:/opt/docker/etc/nginx/conf.d/default.conf
    depends_on:
      - db
      - backend
      - frontend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  frontend:
  backend:
